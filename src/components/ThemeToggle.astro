---
import SunIcon from "./icons/Sun.astro";
import MoonIcon from "./icons/Moon.astro";

const THEMES = ["Light", "Dark"];
---

<div class="relative ml-1 mr-1">
  <button
    id="theme-toggle-btn"
    class="appearance-none border-none flex hover:scale-125 transition"
  >
    <span class="sr-only">Color theme</span>
    <SunIcon id="light" class="theme-toggle-icon size-5 transition-all" />
    <MoonIcon
      id="dark"
      class="theme-toggle-icon absolute size-5 transition-all"
    />
  </button>
</div>

<style>
  @keyframes scale-up-center {
    from {
      transform: scale(0.8);
      opacity: 0;
    }

    to {
      transform: scale(1);
      opacity: 1;
    }
  }
</style>
<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined") {
      return localStorage.getItem("theme") ?? "light";
    }

    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };

  const updateIcon = (themePreference) => {
    document.querySelectorAll(".theme-toggle-icon").forEach((element) => {
      element.style.scale = element.id === themePreference ? "1" : "0";
    });
  };

  const toggleTheme = () => {
    const currentTheme = getThemePreference();
    const newTheme = currentTheme === "light" ? "dark" : "light";

    localStorage.setItem("theme", newTheme);

    const isDark = newTheme === "dark";
    document.documentElement.classList[isDark ? "add" : "remove"]("dark");

    updateIcon(newTheme);
  };

  const initTheme = () => {
    const themePreference = getThemePreference();
    const isDark = themePreference === "dark";

    updateIcon(themePreference);
    document.documentElement.classList[isDark ? "add" : "remove"]("dark");
  };

  // Initialize theme on page load
  initTheme();

  // Add click event listener to toggle theme
  document
    .getElementById("theme-toggle-btn")
    .addEventListener("click", toggleTheme);

  // Listen for system theme changes
  const matchMedia = window.matchMedia("(prefers-color-scheme: dark)");
  matchMedia.addEventListener("change", (e) => {
    const newTheme = e.matches ? "dark" : "light";
    localStorage.setItem("theme", newTheme);
    initTheme();
  });
</script>
